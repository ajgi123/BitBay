{"version":3,"sources":["components/list-elements/ListElement.module.css","hooks/useAsync.ts","hooks/useSafeDispatch.ts","hooks/useKeyNavigation.ts","hooks/useAutoComplete.ts","components/autocomplete/AutoComplete.tsx","api/fetchRepos.ts","api/fetchUsers.ts","helpers/ObjectArraysOper.ts","api/fetchUsersAndRepos.ts","components/list-elements/ListElement.tsx","App.tsx","helpers/opennewtab.ts","reportWebVitals.ts","index.tsx","components/autocomplete/AutoComplete.module.css"],"names":["module","exports","Action","Idle","useSafeDispatch","dispatch","mountedRef","useRef","useLayoutEffect","current","useCallback","args","call","asyncReducer","prevstate","action","type","pending","status","data","error","resolved","rejected","Error","KeyEnums","useAsync","initialState","useReducer","idle","state","unSafeDispatch","runAsync","promise","then","setState","setError","useAutoComplete","fetchData","minTextLength","Array","useState","input","setInput","isShown","setIsShown","curPromise","undefined","useEffect","length","query","cancel","changeHandler","event","target","value","focusHandler","blurHandler","useKeyNavigation","maxCursorIndex","enterHandler","cursor","setCursor","keyDownHandler","key","ArrowDown","ArrowUp","Enter","document","addEventListener","removeEventListener","AutoComplete","props","enterhandler","curIndex","curItemRef","scrollIntoView","behavior","block","inline","className","styles","container","onChange","onFocus","onBlur","dropdown","name","list","map","item","index","mapFunc","fetchRepos","config","a","fetch","response","ok","Promise","reject","json","items","fetchUsers","sortObjectArray","array","sort","b","first","second","mergeObjectArrays","objArr","objKey","obj2Arr","obj2Key","lIndex","rIndex","lItem","rItem","push","console","log","fetchUsersAndRepos","controller","AbortController","signal","resolve","all","repos","users","sortedRepos","sortedUsers","abort","ListElement","React","forwardRef","ref","style","list_element","isActive","active","title","selectedIndex","selectedRef","hasOwnProperty","id","login","url","newWindow","window","open","opener","openInNewTab","html_url","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d865eab7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_element\":\"ListElement_list_element__lxRrk\",\"active\":\"ListElement_active__1zbHk\"};","import { Reducer, useCallback, useReducer } from \"react\";\r\nimport useSafeDispatch from \"./useSafeDispatch\";\r\n\r\nexport enum Action {\r\n  pending = \"pending\",\r\n  resolved = \"resolved\",\r\n  rejected = \"rejected\",\r\n}\r\n\r\nenum Idle {\r\n  idle = \"idle\",\r\n}\r\n\r\nexport type Status = Action | Idle;\r\n\r\ntype ActionType<T> =\r\n  | {\r\n      type: Action.pending;\r\n    }\r\n  | {\r\n      type: Action.resolved;\r\n      data: T;\r\n    }\r\n  | {\r\n      type: Action.rejected;\r\n      error: any;\r\n    };\r\n\r\ntype StateType<T> = {\r\n  data: T | null;\r\n  status: Status;\r\n  error: any | null;\r\n};\r\n\r\nfunction asyncReducer<T>(\r\n  prevstate: StateType<T>,\r\n  action: ActionType<T>\r\n): StateType<T> {\r\n  switch (action.type) {\r\n    case Action.pending: {\r\n      return { status: Action.pending, data: null, error: null };\r\n    }\r\n    case Action.resolved: {\r\n      return { status: Action.resolved, data: action.data, error: null };\r\n    }\r\n    case Action.rejected: {\r\n      return { status: Action.rejected, data: null, error: action.error };\r\n    }\r\n    default: {\r\n      throw new Error(`Unhandled action type`);\r\n    }\r\n  }\r\n}\r\n\r\nconst useAsync = <T>(initialState: T) => {\r\n  const [state, unSafeDispatch] = useReducer<\r\n    Reducer<StateType<T>, ActionType<T>>\r\n  >(asyncReducer, {\r\n    status: Idle.idle,\r\n    data: initialState,\r\n    error: null,\r\n  });\r\n\r\n  const dispatch = useSafeDispatch(unSafeDispatch);\r\n\r\n  const { data, error, status } = state;\r\n\r\n  const runAsync = useCallback(\r\n    (promise: Promise<T>) => {\r\n      dispatch({ type: Action.pending });\r\n      promise.then(\r\n        (data) => {\r\n          dispatch({ type: Action.resolved, data });\r\n        },\r\n        (error) => {\r\n          dispatch({ type: Action.rejected, error });\r\n        }\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const setState = useCallback(\r\n    (data: T) => {\r\n      dispatch({ type: Action.resolved, data });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const setError = useCallback(\r\n    (error) => {\r\n      dispatch({ type: Action.rejected, error });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return {\r\n    error,\r\n    status,\r\n    data,\r\n    runAsync,\r\n    setState,\r\n    setError,\r\n  };\r\n};\r\n\r\nexport default useAsync;\r\n","import { Dispatch, useCallback, useLayoutEffect, useRef } from \"react\";\r\n\r\nconst useSafeDispatch = <T extends Dispatch<any>>(dispatch: T) => {\r\n  const mountedRef = useRef(false);\r\n\r\n  useLayoutEffect(() => {\r\n    mountedRef.current = true;\r\n    return () => {\r\n      mountedRef.current = false;\r\n    };\r\n  }, []);\r\n\r\n  return useCallback(\r\n    (...args: Parameters<T>) => {\r\n      mountedRef.current ? dispatch.call(null, ...args) : void 0;\r\n    },\r\n    [dispatch]\r\n  );\r\n};\r\n\r\nexport default useSafeDispatch;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\n\r\nenum KeyEnums {\r\n  ArrowUp = \"ArrowUp\",\r\n  ArrowDown = \"ArrowDown\",\r\n  Enter = \"Enter\",\r\n}\r\n\r\nconst useKeyNavigation = (maxCursorIndex: number, enterHandler: () => void) => {\r\n  const [cursor, setCursor] = useState<number | boolean>(false);\r\n\r\n  const keyDownHandler = useCallback(\r\n    (event: KeyboardEvent) => {\r\n      if (event.key === KeyEnums.ArrowDown) {\r\n        setCursor((state) => {\r\n          if (typeof state === \"boolean\") {\r\n            return 0;\r\n          }\r\n          if (state >= maxCursorIndex) {\r\n            return maxCursorIndex;\r\n          }\r\n          return state + 1;\r\n        });\r\n        return;\r\n      }\r\n      if (event.key === KeyEnums.ArrowUp) {\r\n        setCursor((state) => {\r\n          if (typeof state === \"boolean\") {\r\n            return 0;\r\n          }\r\n          if (state <= 0) {\r\n            return 0;\r\n          }\r\n          return state - 1;\r\n        });\r\n      }\r\n      if (event.key === KeyEnums.Enter) {\r\n        enterHandler();\r\n      }\r\n    },\r\n    [maxCursorIndex, enterHandler]\r\n  );\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", keyDownHandler);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", keyDownHandler);\r\n    };\r\n  }, [keyDownHandler]);\r\n\r\n  return { cursor, setCursor };\r\n};\r\n\r\nexport default useKeyNavigation;\r\n","import { useEffect, useState, useRef } from \"react\";\r\nimport useAsync from \"./useAsync\";\r\nimport { PromiseWithCancel } from \"../api/interfaces\";\r\n\r\nconst useAutoComplete = <T extends any[]>(\r\n  fetchData: (query: string) => PromiseWithCancel<T>,\r\n  minTextLength = 0\r\n) => {\r\n  const initialState = new Array<any>() as T;\r\n  const { error, status, data, runAsync } = useAsync<T>(initialState);\r\n  const [input, setInput] = useState(\"\");\r\n  const [isShown, setIsShown] = useState(false);\r\n  const curPromise = useRef<PromiseWithCancel<T> | undefined>(undefined);\r\n\r\n  useEffect(() => {\r\n    if (input.length >= minTextLength) {\r\n      runAsync(\r\n        (function () {\r\n          const query = fetchData(input);\r\n          curPromise.current = query;\r\n          return query;\r\n        })()\r\n      );\r\n    }\r\n\r\n    return () => {\r\n      if (curPromise.current) {\r\n        curPromise.current.cancel();\r\n      }\r\n    };\r\n  }, [input, runAsync, fetchData, minTextLength]);\r\n\r\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  const focusHandler = () => {\r\n    setIsShown(true);\r\n  };\r\n\r\n  const blurHandler = () => {\r\n    setIsShown(false);\r\n  };\r\n\r\n  return {\r\n    error,\r\n    status,\r\n    data,\r\n    setInput,\r\n    input,\r\n    changeHandler,\r\n    blurHandler,\r\n    focusHandler,\r\n    isShown,\r\n    setIsShown,\r\n  };\r\n};\r\n\r\nexport default useAutoComplete;\r\n","import styles from \"./AutoComplete.module.css\";\r\nimport useAutoComplete from \"../../hooks/useAutoComplete\";\r\nimport { ReactNode, useRef } from \"react\";\r\nimport { ArrayElement } from \"../../helpers/ArrayElements\";\r\nimport useKeyNavigation from \"../../hooks/useKeyNavigation\";\r\nimport { Action } from \"../../hooks/useAsync\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { PromiseWithCancel } from \"../../api/interfaces\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport type FetchDataType<T> = (query: string) => PromiseWithCancel<T>;\r\nexport type MapFuncType<T extends Object[]> = (\r\n  index: number,\r\n  selectedIndex: number | boolean,\r\n  selectedRef: React.MutableRefObject<HTMLLIElement | null>,\r\n  item: ArrayElement<T>\r\n) => ReactNode;\r\n\r\ntype AutoCompletePropsType<T extends any[]> = {\r\n  fetchData: FetchDataType<T>;\r\n  minTextLength: number;\r\n  mapFunc: MapFuncType<T>;\r\n  enterhandler: (data: T | null, curIndex: number | boolean) => void;\r\n};\r\n\r\nconst AutoComplete = <T extends any[]>(props: AutoCompletePropsType<T>) => {\r\n  const {\r\n    error,\r\n    status,\r\n    data,\r\n    input,\r\n    changeHandler,\r\n    isShown,\r\n    focusHandler,\r\n    blurHandler,\r\n  } = useAutoComplete(props.fetchData, props.minTextLength);\r\n  const { cursor: curIndex, setCursor } = useKeyNavigation(\r\n    data ? data.length - 1 : 0,\r\n    enterHandler\r\n  );\r\n  const curItemRef = useRef<null | HTMLLIElement>(null);\r\n\r\n  useEffect(() => {\r\n    setCursor(false);\r\n  }, [input, setCursor]);\r\n\r\n  function enterHandler() {\r\n    props.enterhandler(data, curIndex);\r\n  }\r\n\r\n  if (curItemRef.current) {\r\n    curItemRef.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"center\",\r\n      inline: \"center\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={changeHandler}\r\n        onFocus={focusHandler}\r\n        onBlur={blurHandler}\r\n        className={styles.input}\r\n      />\r\n      {isShown && input.length >= props.minTextLength && (\r\n        <div className={styles.dropdown} data-testid=\"autocomplete__dropdown\">\r\n          {status === Action.pending && (\r\n            <ClipLoader data-testid=\"autocomplete__loading\" />\r\n          )}\r\n          {status === Action.rejected && error.name === `AbortError` && (\r\n            <ClipLoader />\r\n          )}\r\n          {data &&\r\n            (data.length <= 0 ? (\r\n              <p>No results</p>\r\n            ) : (\r\n              <ol className={styles.list}>\r\n                {data.map((item, index) =>\r\n                  props.mapFunc(index, curIndex, curItemRef, item)\r\n                )}\r\n              </ol>\r\n            ))}\r\n          {status === Action.rejected && error.name !== `AbortError` && (\r\n            <p>Something went wrong</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoComplete;\r\n","import { User } from \"./fetchUsers\";\r\n\r\nexport interface Repos {\r\n  id: number;\r\n  node_id: string;\r\n  name: string;\r\n  full_name: string;\r\n  owner: User;\r\n  private: boolean;\r\n  html_url: string;\r\n  description: string;\r\n  fork: boolean;\r\n  url: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n  pushed_at: string;\r\n  homepage: string;\r\n  size: number;\r\n  stargazers_count: number;\r\n  watchers_count: number;\r\n  language: string;\r\n  forks_count: number;\r\n  open_issues_count: number;\r\n  master_branch: string;\r\n  default_branch: string;\r\n  score: number;\r\n  archive_url: string;\r\n}\r\n\r\nconst fetchRepos = async (\r\n  query: string,\r\n  config?: RequestInit\r\n): Promise<Repos[]> => {\r\n  try {\r\n    const response = await fetch(\r\n      `https://api.github.com/search/repositories?q=${query}&per_page=30`,\r\n      config\r\n    );\r\n\r\n    if (!response.ok) {\r\n      return Promise.reject(response.status);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data.items;\r\n  } catch (error) {\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n\r\nexport default fetchRepos;\r\n","export interface User {\r\n  login: string;\r\n  id: number;\r\n  node_id: string;\r\n  avatar_url: string;\r\n  gravatar_id: string;\r\n  url: string;\r\n  html_url: string;\r\n  followers_url: string;\r\n  subscriptions_url: string;\r\n  organizations_url: string;\r\n  repos_url: string;\r\n  received_events_url: string;\r\n  type: string;\r\n  score: number;\r\n  following_url: string;\r\n  gists_url: string;\r\n  starred_url: string;\r\n  events_url: string;\r\n  site_admin: boolean;\r\n}\r\n\r\nconst fetchUsers = async (\r\n  query: string,\r\n  config?: RequestInit\r\n): Promise<User[]> => {\r\n  try {\r\n    const response = await fetch(\r\n      `https://api.github.com/search/users?q=${query}&per_page=30`,\r\n      config\r\n    );\r\n\r\n    if (!response.ok) {\r\n      return Promise.reject(response.status);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data.items;\r\n  } catch (error) {\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n\r\nexport default fetchUsers;\r\n","export const sortObjectArray = <T extends Object, K extends keyof T>(\r\n  array: T[],\r\n  key: K\r\n) => {\r\n  return array.sort((a, b) => {\r\n    const first = a[key];\r\n    const second = b[key];\r\n    if (first > second) return 1;\r\n    if (first < second) return -1;\r\n    return 0;\r\n  });\r\n};\r\n\r\nexport const mergeObjectArrays = <\r\n  Obj extends Object,\r\n  ObjKey extends keyof Obj,\r\n  Obj2 extends object,\r\n  Obj2Key extends keyof Obj2\r\n>(\r\n  objArr: Obj[],\r\n  objKey: ObjKey,\r\n  obj2Arr: Obj2[],\r\n  obj2Key: Obj2Key\r\n) => {\r\n  const array = [];\r\n  let lIndex = 0;\r\n  let rIndex = 0;\r\n\r\n  while (lIndex < objArr.length || rIndex < obj2Arr.length) {\r\n    const lItem = objArr[lIndex];\r\n    const rItem = obj2Arr[rIndex];\r\n\r\n    if (lIndex >= objArr.length) {\r\n      array.push({ ...obj2Arr[rIndex] });\r\n      rIndex++;\r\n    } else if (rIndex >= obj2Arr.length) {\r\n      array.push({ ...objArr[lIndex] });\r\n      lIndex++;\r\n    }\r\n    // @ts-expect-error\r\n    else if (lItem[objKey] < rItem[obj2Key]) {\r\n      array.push({ ...objArr[lIndex] });\r\n      lIndex++;\r\n    } else {\r\n      array.push({ ...obj2Arr[rIndex] });\r\n      rIndex++;\r\n    }\r\n  }\r\n  console.log(array);\r\n  return array;\r\n};\r\n","import fetchRepos, { Repos } from \"./fetchRepos\";\r\nimport fetchUsers, { User } from \"./fetchUsers\";\r\nimport {\r\n  sortObjectArray,\r\n  mergeObjectArrays,\r\n} from \"../helpers/ObjectArraysOper\";\r\nimport { PromiseWithCancel } from \"./interfaces\";\r\n\r\nconst fetchUsersAndRepos = (\r\n  query: string\r\n): PromiseWithCancel<(User | Repos)[]> => {\r\n  const controller = new AbortController();\r\n  const signal = controller.signal;\r\n  const promise = new Promise(async (resolve, reject) => {\r\n    try {\r\n      const [repos, users] = await Promise.all([\r\n        fetchRepos(query, { signal }),\r\n        fetchUsers(query, { signal }),\r\n      ]);\r\n\r\n      const sortedRepos = sortObjectArray(repos, \"name\");\r\n      const sortedUsers = sortObjectArray(users, \"login\");\r\n      resolve(mergeObjectArrays(sortedRepos, \"name\", sortedUsers, \"login\"));\r\n    } catch (err) {\r\n      return reject(err);\r\n    }\r\n  });\r\n  (promise as PromiseWithCancel<(User | Repos)[]>).cancel = () =>\r\n    controller.abort();\r\n  return promise as PromiseWithCancel<(User | Repos)[]>;\r\n};\r\n\r\nexport default fetchUsersAndRepos;\r\n","import React from \"react\";\r\nimport styles from \"./ListElement.module.css\";\r\n\r\ntype ListElementPropsType = {\r\n  title: string;\r\n  name: string;\r\n  isActive: boolean;\r\n};\r\n\r\nconst ListElement = React.forwardRef<\r\n  HTMLLIElement | null,\r\n  ListElementPropsType\r\n>((props, ref) => {\r\n  let style = styles.list_element;\r\n\r\n  if (props.isActive) {\r\n    style = `${style} ${styles.active}`;\r\n  }\r\n  return (\r\n    <li ref={ref} className={style}>\r\n      <h3>{props.title}</h3>\r\n      <h4>{props.name}</h4>\r\n    </li>\r\n  );\r\n});\r\n\r\nexport default ListElement;\r\n","import \"./App.css\";\r\nimport AutoComplete from \"./components/autocomplete/AutoComplete\";\r\nimport { MapFuncType } from \"./components/autocomplete/AutoComplete\";\r\nimport { User } from \"./api/fetchUsers\";\r\nimport { Repos } from \"./api/fetchRepos\";\r\nimport fetchUsersAndRepos from \"./api/fetchUsersAndRepos\";\r\nimport ListElement from \"./components/list-elements/ListElement\";\r\nimport { openInNewTab } from \"./helpers/opennewtab\";\r\n\r\nexport const mapFunc: MapFuncType<(User | Repos)[]> = (\r\n  index,\r\n  selectedIndex,\r\n  selectedRef,\r\n  item\r\n) => {\r\n  if (item.hasOwnProperty(\"name\")) {\r\n    return (\r\n      <ListElement\r\n        title=\"repo\"\r\n        key={item.id}\r\n        // @ts-expect-error\r\n        name={item.name}\r\n        isActive={index === selectedIndex}\r\n        ref={index === selectedIndex ? selectedRef : null}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <ListElement\r\n      title=\"user\"\r\n      key={item.id}\r\n      // @ts-expect-error\r\n      name={item.login}\r\n      isActive={index === selectedIndex}\r\n      ref={index === selectedIndex ? selectedRef : null}\r\n    />\r\n  );\r\n};\r\n\r\nexport const enterHandler = (\r\n  data: (User | Repos)[] | null,\r\n  curIndex: number | boolean\r\n) => {\r\n  if (typeof curIndex === \"number\" && data) {\r\n    openInNewTab(data[curIndex].html_url);\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <AutoComplete\r\n        fetchData={fetchUsersAndRepos}\r\n        minTextLength={3}\r\n        mapFunc={mapFunc}\r\n        enterhandler={enterHandler}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const openInNewTab = (url: string) => {\r\n  const newWindow = window.open(url, \"_blank\", \"noopener,noreferrer\");\r\n  if (newWindow) newWindow.opener = null;\r\n};\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AutoComplete_container__2dEfY\",\"input\":\"AutoComplete_input__10qTd\",\"dropdown\":\"AutoComplete_dropdown__1d95z\",\"list\":\"AutoComplete_list__2ni13\"};"],"sourceRoot":""}